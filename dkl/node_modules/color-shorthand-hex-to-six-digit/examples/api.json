{"_quickTake.js":{"title":"Quick Take","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; conv &#x7D; from \"color-shorthand-hex-to-six-digit\";\n\n// converts shorthand hex color codes within strings (imagine that could be\n// email template source code):\nassert.equal(\n  conv(\"aaaa #f0c zzzz\\n\\t\\t\\t#fc0\"),\n  \"aaaa #ff00cc zzzz\\n\\t\\t\\t#ffcc00\"\n);\n\n// converts shorthand hex colour codes within plain objects:\nassert.deepEqual(\n  conv(&#x7B;\n    a: \"#ffcc00\",\n    b: \"#f0c\",\n    c: \"text\",\n  &#x7D;),\n  &#x7B;\n    a: \"#ffcc00\",\n    b: \"#ff00cc\",\n    c: \"text\",\n  &#x7D;\n);\n\n// converts shorthand hex colour codes within arrays:\nassert.deepEqual(conv([\"#fc0\", \"#f0c\", \"text\", \"\"]), [\n  \"#ffcc00\",\n  \"#ff00cc\",\n  \"text\",\n  \"\",\n]);\n\n// converts shorthand hex colour codes within nested spaghetti's:\nassert.deepEqual(\n  conv([[[[[[&#x7B; x: [\"#fc0\"] &#x7D;]]]]], &#x7B; z: \"#f0c\" &#x7D;, [\"text\"], &#x7B; y: \"\" &#x7D;]),\n  [[[[[[&#x7B; x: [\"#ffcc00\"] &#x7D;]]]]], &#x7B; z: \"#ff00cc\" &#x7D;, [\"text\"], &#x7B; y: \"\" &#x7D;]\n);\n\n// in all other cases it silently returns the input:\nassert.equal(conv(null), null);"}}